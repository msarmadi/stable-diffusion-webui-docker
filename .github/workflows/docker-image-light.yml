name: Docker Image CI - build-push-action light

on:
  # push:
  #   branches: [ "main" ]
  workflow_dispatch:
    branches: [ "main" ]
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
  pull_request:
    branches: [ "main" ]

jobs:
  
  docker:
    runs-on: ubuntu-latest
    steps:
      # Check out code
      - name: Maximize build space
        uses: msarmadi/maximize-build-space-forauto1111@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
      - name: Checkout
        uses: actions/checkout@v2
      # This is a separate action that sets up buildx runner
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # So now you can use Actions' own caching!
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # And make it available for builds
      - name: Delete huge unnecessary tools folder and packages
        run: | 
          df -h |grep /dev/root
          sudo du -shc /usr/* 2> /dev/null | sort -h  | grep G || true
          sudo du -shc /mnt/* 2> /dev/null | sort -h  | grep G || true
          rm -rf /opt/hostedtoolcache
          df -h| grep /dev/root
          echo "Listing 100 largest packages"
          dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
          df -h
          echo "Removing large packages"
          sudo apt-get remove -y '^ghc-8.*' || true
          sudo apt-get remove -y '^dotnet-.*' || true
          sudo apt-get remove -y '^llvm-.*' || true
          sudo apt-get remove -y 'php.*' || true
          sudo apt-get remove -y azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel || true
          sudo apt-get autoremove -y
          sudo apt-get clean
          df -h
          echo "Removing large directories"
          # deleting 15GB
          rm -rf /usr/share/dotnet/
          sudo du -shc /usr/* 2> /dev/null | sort -h  | grep G || true
          sudo du -shc /mnt/* 2> /dev/null | sort -h  | grep G || true
          df -h

      - name: Build and push
        uses: docker/build-push-action@v2
        
        with:
          context: sd-auto-unified
          file: sd-auto-unified/Dockerfile.mfs
          push: true
          tags: msarmadi/sd-auto-unified-light:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
        # This ugly bit is necessary if you don't want your cache to grow forever
        # until it hits GitHub's limit of 5GB.
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
#       - name: Move cache
#         run: |
#           df -h
#           rm -rf /tmp/.buildx-cache
#           mv /tmp/.buildx-cache-new /tmp/.buildx-cache
#           df -h
